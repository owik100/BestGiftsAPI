// <auto-generated />
using System;
using BestGiftsAPI.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BestGiftsAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220108165011_Add_Creatiom_Time")]
    partial class Add_Creatiom_Time
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BestGiftsAPI.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Dla niego"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Dla niej"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Na urodziny"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Walentynki"
                        });
                });

            modelBuilder.Entity("BestGiftsAPI.Entities.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommentAuthor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommentContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("GiftIdeaId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("GiftIdeaId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            CommentId = 1,
                            CommentAuthor = "Zbyszek",
                            CommentContent = "Super pomysł!",
                            CreationTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GiftIdeaId = 1
                        },
                        new
                        {
                            CommentId = 2,
                            CommentAuthor = "Karolina",
                            CommentContent = "Nudy",
                            CreationTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GiftIdeaId = 2
                        },
                        new
                        {
                            CommentId = 3,
                            CommentAuthor = "Krzychux1200",
                            CommentContent = "Ale to drogie",
                            CreationTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GiftIdeaId = 2
                        },
                        new
                        {
                            CommentId = 4,
                            CommentAuthor = "Janusz 4000",
                            CommentContent = "Sprzedam opla",
                            CreationTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GiftIdeaId = 4
                        },
                        new
                        {
                            CommentId = 5,
                            CommentAuthor = "Grażynka",
                            CommentContent = "Piękne. Mąż zachwycony",
                            CreationTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GiftIdeaId = 5
                        },
                        new
                        {
                            CommentId = 6,
                            CommentAuthor = "Piotr Fronczewski",
                            CommentContent = "Polecam",
                            CreationTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GiftIdeaId = 5
                        });
                });

            modelBuilder.Entity("BestGiftsAPI.Entities.GiftIdea", b =>
                {
                    b.Property<int>("GiftIdeaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("ImageContent")
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("LikesCounter")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GiftIdeaId");

                    b.ToTable("GiftIdeas");

                    b.HasData(
                        new
                        {
                            GiftIdeaId = 1,
                            Author = "Jan",
                            CreationTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Można kupić np. na twoje_marzenia.com",
                            LikesCounter = 5,
                            Name = "Kolacja we dwoje"
                        },
                        new
                        {
                            GiftIdeaId = 2,
                            Author = "Maciek",
                            CreationTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Zmienia kolor w zależności od temperatuy napoju",
                            LikesCounter = 2,
                            Name = "Kubek termiczny"
                        },
                        new
                        {
                            GiftIdeaId = 3,
                            Author = "Paulina",
                            CreationTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Własnoręcznie wydziergane skarpety. Czy może być coś lepszego? :)",
                            LikesCounter = -3,
                            Name = "Skarpety"
                        },
                        new
                        {
                            GiftIdeaId = 4,
                            Author = "Ewelina",
                            CreationTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Malinowe, białe, czarne, zielone, a może niebiskie",
                            LikesCounter = 17,
                            Name = "Zestaw herbat"
                        },
                        new
                        {
                            GiftIdeaId = 5,
                            Author = "Amadi",
                            CreationTime = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "W luym często może być zimno",
                            LikesCounter = 0,
                            Name = "Rękawice na zime"
                        });
                });

            modelBuilder.Entity("BestGiftsAPI.Entities.GiftIdeaCategory", b =>
                {
                    b.Property<int>("GiftIdeaId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("GiftIdeaId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("GiftIdeaCategories");

                    b.HasData(
                        new
                        {
                            GiftIdeaId = 1,
                            CategoryId = 3
                        },
                        new
                        {
                            GiftIdeaId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            GiftIdeaId = 2,
                            CategoryId = 1
                        },
                        new
                        {
                            GiftIdeaId = 2,
                            CategoryId = 2
                        },
                        new
                        {
                            GiftIdeaId = 2,
                            CategoryId = 3
                        },
                        new
                        {
                            GiftIdeaId = 3,
                            CategoryId = 3
                        },
                        new
                        {
                            GiftIdeaId = 4,
                            CategoryId = 4
                        },
                        new
                        {
                            GiftIdeaId = 5,
                            CategoryId = 4
                        });
                });

            modelBuilder.Entity("BestGiftsAPI.Entities.Comment", b =>
                {
                    b.HasOne("BestGiftsAPI.Entities.GiftIdea", "GiftIdea")
                        .WithMany("Comments")
                        .HasForeignKey("GiftIdeaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiftIdea");
                });

            modelBuilder.Entity("BestGiftsAPI.Entities.GiftIdeaCategory", b =>
                {
                    b.HasOne("BestGiftsAPI.Entities.Category", "Category")
                        .WithMany("GiftIdeaCategory")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BestGiftsAPI.Entities.GiftIdea", "GiftIdea")
                        .WithMany("GiftIdeaCategory")
                        .HasForeignKey("GiftIdeaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("GiftIdea");
                });

            modelBuilder.Entity("BestGiftsAPI.Entities.Category", b =>
                {
                    b.Navigation("GiftIdeaCategory");
                });

            modelBuilder.Entity("BestGiftsAPI.Entities.GiftIdea", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("GiftIdeaCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
