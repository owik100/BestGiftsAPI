// <auto-generated />
using BestGiftsAPI.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BestGiftsAPI.Migrations
{
    [DbContext(typeof(BestGiftsContext))]
    [Migration("20211208203411_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BestGiftsAPI.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("BestGiftsAPI.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommentContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GiftIdeaId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("GiftIdeaId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("BestGiftsAPI.Models.GiftIdea", b =>
                {
                    b.Property<int>("GiftIdeaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LikesCounter")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GiftIdeaId");

                    b.ToTable("GiftIdeas");
                });

            modelBuilder.Entity("BestGiftsAPI.Models.GiftIdeaCategory", b =>
                {
                    b.Property<int>("GiftIdeaId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("GiftIdeaId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("GiftIdeaCategories");
                });

            modelBuilder.Entity("BestGiftsAPI.Models.Comment", b =>
                {
                    b.HasOne("BestGiftsAPI.Models.GiftIdea", "GiftIdea")
                        .WithMany("Comments")
                        .HasForeignKey("GiftIdeaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GiftIdea");
                });

            modelBuilder.Entity("BestGiftsAPI.Models.GiftIdeaCategory", b =>
                {
                    b.HasOne("BestGiftsAPI.Models.Category", "Category")
                        .WithMany("GiftIdeaCategory")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BestGiftsAPI.Models.GiftIdea", "GiftIdea")
                        .WithMany("GiftIdeaCategory")
                        .HasForeignKey("GiftIdeaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("GiftIdea");
                });

            modelBuilder.Entity("BestGiftsAPI.Models.Category", b =>
                {
                    b.Navigation("GiftIdeaCategory");
                });

            modelBuilder.Entity("BestGiftsAPI.Models.GiftIdea", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("GiftIdeaCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
